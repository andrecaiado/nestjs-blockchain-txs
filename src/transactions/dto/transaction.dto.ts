import { ApiProperty } from '@nestjs/swagger';
import { IsNotEmpty, IsNumber, IsPositive, IsString } from 'class-validator';

export class TransactionOutputDto {
  @ApiProperty({
    description: 'The public key of the wallet that will receive the funds',
  })
  @IsNotEmpty()
  @IsString()
  recipientPublicKey: string;

  @ApiProperty({
    description: 'The funds that will be received by the recipient',
  })
  @IsNotEmpty()
  @IsNumber()
  @IsPositive()
  amount: number;

  @ApiProperty({
    description: 'The transaction ID where this output belongs to',
  })
  @IsNotEmpty()
  @IsString()
  parentTransactionId: string;

  @ApiProperty({
    description: 'The ID of this output',
  })
  @IsNotEmpty()
  @IsString()
  id: string;
}

export class TransactionInputDto {
  @ApiProperty({
    description: 'The ID of the UTXO',
  })
  @IsNotEmpty()
  @IsString()
  transactionOutputId: string;

  @ApiProperty({
    description: 'An UTXO that will be used to fund the transaction',
  })
  @IsNotEmpty()
  UTXO: TransactionOutputDto;
}

export class TransactionDto {
  @ApiProperty({
    description: 'The transaction ID. This is automatically generated.',
  })
  @IsNotEmpty()
  @IsString()
  transactionId: string;

  @ApiProperty({
    description: 'The public key of the wallet that will send the funds',
  })
  @IsNotEmpty()
  @IsString()
  senderPublicKey: string;

  @ApiProperty({
    description: 'The public key of the wallet that will receive the funds',
  })
  @IsNotEmpty()
  @IsString()
  recipientPublicKey: string;

  @ApiProperty({
    description: 'The amount to be transfered',
  })
  @IsNotEmpty()
  @IsNumber()
  @IsPositive()
  amount: number;

  @ApiProperty({
    description: 'The signature generated by the sender private key',
  })
  @IsNotEmpty()
  @IsString()
  signature: string;

  @ApiProperty({
    description: 'The UTXOs that will be used to fund the transaction',
    type: [TransactionInputDto],
  })
  @IsNotEmpty()
  inputs: TransactionInputDto[];

  @ApiProperty({
    description: 'This represents where the funds are going to',
    type: [TransactionOutputDto],
  })
  @IsNotEmpty()
  outputs: TransactionOutputDto[];

  @ApiProperty({
    description:
      'The transactions fees that will be payed be the sender and will be collected by the miner',
  })
  @IsNotEmpty()
  @IsNumber()
  @IsPositive()
  transactionFees: number;
}
